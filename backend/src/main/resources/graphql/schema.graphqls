type Mutation{
    saveUser(userRequest: UserRequest): CustomResponse
    updateUser(id: ID!, userRequest: UserRequest!): CustomResponse
    deleteUser(id: ID!): CustomResponse

    saveCustomer(customerRequest: CustomerRequest): CustomResponse
    updateCustomer(id: ID!, customerRequest: CustomerRequest!): CustomResponse
    deleteCustomer(id: ID!): CustomResponse
}
# All available queries
type Query {
    users: [User]
    user(id: ID): User
    authenticate(userRequest: UserRequest): Int

    customers: [Customer]
    customer(id: ID): Customer
}

type CustomResponse {
    success: Boolean
    message: String
}

type User {
    user: ID
    firstname: String
    lastname: String
    username: String
    password: String
    mail: String
    document: Int
}
input UserRequest {
    firstname: String
    lastname: String
    username: String!
    password: String!
    mail: String
    document: Int
}

type Customer {
    customerid: ID
    firstname: String
    lastname: String
    document: String
    address: String
}

input CustomerRequest {
    firstname: String!
    lastname: String!
    address: String
    document: String!
}